// Code generated by protoc-gen-go. DO NOT EDIT.
// source: article.proto

package go_micro_srv_article

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"

	client "github.com/micro/go-micro/client"

	server "github.com/micro/go-micro/server"

	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 用户信息
type Article struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId               uint32   `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content              string   `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	CreateTime           string   `protobuf:"bytes,5,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string   `protobuf:"bytes,6,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Article) Reset()         { *m = Article{} }
func (m *Article) String() string { return proto.CompactTextString(m) }
func (*Article) ProtoMessage()    {}
func (*Article) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c593d380f9840a2, []int{0}
}

func (m *Article) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Article.Unmarshal(m, b)
}
func (m *Article) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Article.Marshal(b, m, deterministic)
}
func (m *Article) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Article.Merge(m, src)
}
func (m *Article) XXX_Size() int {
	return xxx_messageInfo_Article.Size(m)
}
func (m *Article) XXX_DiscardUnknown() {
	xxx_messageInfo_Article.DiscardUnknown(m)
}

var xxx_messageInfo_Article proto.InternalMessageInfo

func (m *Article) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Article) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Article) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Article) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Article) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *Article) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

type Id struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Id) Reset()         { *m = Id{} }
func (m *Id) String() string { return proto.CompactTextString(m) }
func (*Id) ProtoMessage()    {}
func (*Id) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c593d380f9840a2, []int{1}
}

func (m *Id) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Id.Unmarshal(m, b)
}
func (m *Id) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Id.Marshal(b, m, deterministic)
}
func (m *Id) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Id.Merge(m, src)
}
func (m *Id) XXX_Size() int {
	return xxx_messageInfo_Id.Size(m)
}
func (m *Id) XXX_DiscardUnknown() {
	xxx_messageInfo_Id.DiscardUnknown(m)
}

var xxx_messageInfo_Id proto.InternalMessageInfo

func (m *Id) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Response struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c593d380f9840a2, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Response) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type IdResponse struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Id                   uint32   `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdResponse) Reset()         { *m = IdResponse{} }
func (m *IdResponse) String() string { return proto.CompactTextString(m) }
func (*IdResponse) ProtoMessage()    {}
func (*IdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c593d380f9840a2, []int{3}
}

func (m *IdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdResponse.Unmarshal(m, b)
}
func (m *IdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdResponse.Marshal(b, m, deterministic)
}
func (m *IdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdResponse.Merge(m, src)
}
func (m *IdResponse) XXX_Size() int {
	return xxx_messageInfo_IdResponse.Size(m)
}
func (m *IdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IdResponse proto.InternalMessageInfo

func (m *IdResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *IdResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *IdResponse) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ArticleResponse struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Article              *Article `protobuf:"bytes,3,opt,name=article,proto3" json:"article,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArticleResponse) Reset()         { *m = ArticleResponse{} }
func (m *ArticleResponse) String() string { return proto.CompactTextString(m) }
func (*ArticleResponse) ProtoMessage()    {}
func (*ArticleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c593d380f9840a2, []int{4}
}

func (m *ArticleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArticleResponse.Unmarshal(m, b)
}
func (m *ArticleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArticleResponse.Marshal(b, m, deterministic)
}
func (m *ArticleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArticleResponse.Merge(m, src)
}
func (m *ArticleResponse) XXX_Size() int {
	return xxx_messageInfo_ArticleResponse.Size(m)
}
func (m *ArticleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ArticleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ArticleResponse proto.InternalMessageInfo

func (m *ArticleResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ArticleResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ArticleResponse) GetArticle() *Article {
	if m != nil {
		return m.Article
	}
	return nil
}

type ArticleListResponse struct {
	Code                 int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Articles             []*Article `protobuf:"bytes,3,rep,name=articles,proto3" json:"articles,omitempty"`
	Page                 *PageMap   `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ArticleListResponse) Reset()         { *m = ArticleListResponse{} }
func (m *ArticleListResponse) String() string { return proto.CompactTextString(m) }
func (*ArticleListResponse) ProtoMessage()    {}
func (*ArticleListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c593d380f9840a2, []int{5}
}

func (m *ArticleListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArticleListResponse.Unmarshal(m, b)
}
func (m *ArticleListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArticleListResponse.Marshal(b, m, deterministic)
}
func (m *ArticleListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArticleListResponse.Merge(m, src)
}
func (m *ArticleListResponse) XXX_Size() int {
	return xxx_messageInfo_ArticleListResponse.Size(m)
}
func (m *ArticleListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ArticleListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ArticleListResponse proto.InternalMessageInfo

func (m *ArticleListResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ArticleListResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ArticleListResponse) GetArticles() []*Article {
	if m != nil {
		return m.Articles
	}
	return nil
}

func (m *ArticleListResponse) GetPage() *PageMap {
	if m != nil {
		return m.Page
	}
	return nil
}

type PageNumPageSize struct {
	PageNum              int32    `protobuf:"varint,1,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PageNumPageSize) Reset()         { *m = PageNumPageSize{} }
func (m *PageNumPageSize) String() string { return proto.CompactTextString(m) }
func (*PageNumPageSize) ProtoMessage()    {}
func (*PageNumPageSize) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c593d380f9840a2, []int{6}
}

func (m *PageNumPageSize) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageNumPageSize.Unmarshal(m, b)
}
func (m *PageNumPageSize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageNumPageSize.Marshal(b, m, deterministic)
}
func (m *PageNumPageSize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageNumPageSize.Merge(m, src)
}
func (m *PageNumPageSize) XXX_Size() int {
	return xxx_messageInfo_PageNumPageSize.Size(m)
}
func (m *PageNumPageSize) XXX_DiscardUnknown() {
	xxx_messageInfo_PageNumPageSize.DiscardUnknown(m)
}

var xxx_messageInfo_PageNumPageSize proto.InternalMessageInfo

func (m *PageNumPageSize) GetPageNum() int32 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *PageNumPageSize) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type PageMap struct {
	PageNum              int32    `protobuf:"varint,1,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Count                int32    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PageMap) Reset()         { *m = PageMap{} }
func (m *PageMap) String() string { return proto.CompactTextString(m) }
func (*PageMap) ProtoMessage()    {}
func (*PageMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c593d380f9840a2, []int{7}
}

func (m *PageMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageMap.Unmarshal(m, b)
}
func (m *PageMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageMap.Marshal(b, m, deterministic)
}
func (m *PageMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageMap.Merge(m, src)
}
func (m *PageMap) XXX_Size() int {
	return xxx_messageInfo_PageMap.Size(m)
}
func (m *PageMap) XXX_DiscardUnknown() {
	xxx_messageInfo_PageMap.DiscardUnknown(m)
}

var xxx_messageInfo_PageMap proto.InternalMessageInfo

func (m *PageMap) GetPageNum() int32 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *PageMap) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *PageMap) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*Article)(nil), "go.micro.srv.article.Article")
	proto.RegisterType((*Id)(nil), "go.micro.srv.article.Id")
	proto.RegisterType((*Response)(nil), "go.micro.srv.article.Response")
	proto.RegisterType((*IdResponse)(nil), "go.micro.srv.article.IdResponse")
	proto.RegisterType((*ArticleResponse)(nil), "go.micro.srv.article.ArticleResponse")
	proto.RegisterType((*ArticleListResponse)(nil), "go.micro.srv.article.ArticleListResponse")
	proto.RegisterType((*PageNumPageSize)(nil), "go.micro.srv.article.PageNumPageSize")
	proto.RegisterType((*PageMap)(nil), "go.micro.srv.article.PageMap")
}

func init() { proto.RegisterFile("article.proto", fileDescriptor_5c593d380f9840a2) }

var fileDescriptor_5c593d380f9840a2 = []byte{
	// 445 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xdf, 0x8b, 0xd3, 0x40,
	0x10, 0xbe, 0x34, 0x4d, 0xd2, 0x1b, 0xb9, 0x3b, 0x19, 0x8b, 0x84, 0x82, 0x47, 0x59, 0x38, 0x38,
	0x5f, 0x82, 0x9e, 0x0f, 0xe2, 0xa3, 0x72, 0x58, 0x82, 0x9e, 0x96, 0x9c, 0x3e, 0xfa, 0x10, 0xb3,
	0x43, 0x59, 0x68, 0xb3, 0x4b, 0x76, 0x53, 0xd0, 0xff, 0xc3, 0x3f, 0xc0, 0x47, 0xff, 0x4b, 0xc9,
	0x66, 0x53, 0x83, 0xf4, 0x07, 0xbd, 0xa7, 0xec, 0x7c, 0xdf, 0xec, 0x37, 0x33, 0xdf, 0x2c, 0x81,
	0xb3, 0xbc, 0x32, 0xa2, 0x58, 0x52, 0xa2, 0x2a, 0x69, 0x24, 0x8e, 0x17, 0x32, 0x59, 0x89, 0xa2,
	0x92, 0x89, 0xae, 0xd6, 0x89, 0xe3, 0xd8, 0x6f, 0x0f, 0xa2, 0xb7, 0xed, 0x19, 0xcf, 0x61, 0x20,
	0x78, 0xec, 0x4d, 0xbd, 0xeb, 0xb3, 0x6c, 0x20, 0x38, 0x3e, 0x85, 0xb0, 0xd6, 0x54, 0xa5, 0x3c,
	0x1e, 0x58, 0xcc, 0x45, 0x38, 0x86, 0xc0, 0x08, 0xb3, 0xa4, 0xd8, 0x9f, 0x7a, 0xd7, 0xa7, 0x59,
	0x1b, 0x60, 0x0c, 0x51, 0x21, 0x4b, 0x43, 0xa5, 0x89, 0x87, 0x16, 0xef, 0x42, 0xbc, 0x04, 0x28,
	0x2a, 0xca, 0x0d, 0x7d, 0x11, 0x2b, 0x8a, 0x03, 0x4b, 0xf6, 0x90, 0x86, 0xaf, 0x15, 0xef, 0xf8,
	0xb0, 0xe5, 0xff, 0x21, 0x6c, 0x0c, 0x83, 0x94, 0xff, 0xdf, 0x1d, 0x7b, 0x01, 0xa3, 0x8c, 0xb4,
	0x92, 0xa5, 0x26, 0x44, 0x18, 0x16, 0x92, 0x93, 0x65, 0x83, 0xcc, 0x9e, 0xf1, 0x31, 0xf8, 0x2b,
	0xbd, 0xb0, 0xad, 0x9f, 0x66, 0xcd, 0x91, 0xbd, 0x03, 0x48, 0xf9, 0x71, 0x77, 0x5c, 0x55, 0x7f,
	0x53, 0x55, 0xc1, 0x85, 0xb3, 0xeb, 0x48, 0xa1, 0xd7, 0x10, 0x39, 0xcf, 0xad, 0xda, 0xa3, 0x9b,
	0x67, 0xc9, 0xb6, 0x85, 0x24, 0x9d, 0x7a, 0x97, 0xcd, 0xfe, 0x78, 0xf0, 0xc4, 0x81, 0x1f, 0x85,
	0x36, 0x47, 0x96, 0x7d, 0x03, 0x23, 0x27, 0xa4, 0x63, 0x7f, 0xea, 0x1f, 0xae, 0xbb, 0x49, 0xc7,
	0x97, 0x30, 0x54, 0xf9, 0x82, 0xec, 0x36, 0x77, 0x5e, 0x9b, 0xe7, 0x0b, 0xba, 0xcb, 0x55, 0x66,
	0x53, 0xd9, 0x0c, 0x2e, 0x1a, 0xe0, 0x53, 0xbd, 0x6a, 0x3e, 0xf7, 0xe2, 0xa7, 0x7d, 0x16, 0xaa,
	0x85, 0x5c, 0xa7, 0x5d, 0x88, 0x13, 0x18, 0x29, 0x97, 0x65, 0x3b, 0x0e, 0xb2, 0x4d, 0xcc, 0xbe,
	0x42, 0xe4, 0x94, 0x1f, 0x26, 0xd0, 0xbc, 0xd1, 0x42, 0xd6, 0xa5, 0xb1, 0x66, 0x07, 0x59, 0x1b,
	0xdc, 0xfc, 0xf2, 0xe1, 0xdc, 0x0d, 0x7a, 0x4f, 0xd5, 0x5a, 0x14, 0x84, 0x1f, 0x20, 0x9c, 0x91,
	0xf9, 0x5c, 0x12, 0xc6, 0xdb, 0x27, 0x4c, 0xf9, 0xe4, 0x6a, 0xbf, 0x65, 0x6e, 0x23, 0xec, 0x04,
	0xbf, 0x41, 0x34, 0x23, 0x73, 0x97, 0x97, 0x3f, 0xf0, 0x6a, 0xb7, 0x5f, 0x3d, 0x7b, 0x26, 0xcf,
	0xf7, 0x4a, 0xf7, 0x17, 0xce, 0x4e, 0x30, 0x85, 0xe1, 0x5c, 0x6a, 0x83, 0xfb, 0x57, 0x38, 0x99,
	0xee, 0x1a, 0xa4, 0x27, 0xf5, 0x1e, 0xfc, 0x79, 0x7d, 0x50, 0xe9, 0x72, 0x3b, 0xdd, 0xd3, 0xb9,
	0x85, 0xf0, 0x96, 0x96, 0x64, 0xf6, 0xd9, 0x77, 0x50, 0xe5, 0x7b, 0x68, 0x7f, 0x51, 0xaf, 0xfe,
	0x06, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x8d, 0x76, 0x75, 0xb3, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for ArticleService service

type ArticleServiceClient interface {
	GetOne(ctx context.Context, in *Id, opts ...client.CallOption) (*ArticleResponse, error)
	GetMany(ctx context.Context, in *PageNumPageSize, opts ...client.CallOption) (*ArticleListResponse, error)
	Post(ctx context.Context, in *Article, opts ...client.CallOption) (*IdResponse, error)
	Put(ctx context.Context, in *Article, opts ...client.CallOption) (*Response, error)
	Delete(ctx context.Context, in *Id, opts ...client.CallOption) (*Response, error)
}

type articleServiceClient struct {
	c           client.Client
	serviceName string
}

func NewArticleServiceClient(serviceName string, c client.Client) ArticleServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.article"
	}
	return &articleServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *articleServiceClient) GetOne(ctx context.Context, in *Id, opts ...client.CallOption) (*ArticleResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ArticleService.GetOne", in)
	out := new(ArticleResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleServiceClient) GetMany(ctx context.Context, in *PageNumPageSize, opts ...client.CallOption) (*ArticleListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ArticleService.GetMany", in)
	out := new(ArticleListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleServiceClient) Post(ctx context.Context, in *Article, opts ...client.CallOption) (*IdResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ArticleService.Post", in)
	out := new(IdResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleServiceClient) Put(ctx context.Context, in *Article, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "ArticleService.Put", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleServiceClient) Delete(ctx context.Context, in *Id, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "ArticleService.Delete", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ArticleService service

type ArticleServiceHandler interface {
	GetOne(context.Context, *Id, *ArticleResponse) error
	GetMany(context.Context, *PageNumPageSize, *ArticleListResponse) error
	Post(context.Context, *Article, *IdResponse) error
	Put(context.Context, *Article, *Response) error
	Delete(context.Context, *Id, *Response) error
}

func RegisterArticleServiceHandler(s server.Server, hdlr ArticleServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&ArticleService{hdlr}, opts...))
}

type ArticleService struct {
	ArticleServiceHandler
}

func (h *ArticleService) GetOne(ctx context.Context, in *Id, out *ArticleResponse) error {
	return h.ArticleServiceHandler.GetOne(ctx, in, out)
}

func (h *ArticleService) GetMany(ctx context.Context, in *PageNumPageSize, out *ArticleListResponse) error {
	return h.ArticleServiceHandler.GetMany(ctx, in, out)
}

func (h *ArticleService) Post(ctx context.Context, in *Article, out *IdResponse) error {
	return h.ArticleServiceHandler.Post(ctx, in, out)
}

func (h *ArticleService) Put(ctx context.Context, in *Article, out *Response) error {
	return h.ArticleServiceHandler.Put(ctx, in, out)
}

func (h *ArticleService) Delete(ctx context.Context, in *Id, out *Response) error {
	return h.ArticleServiceHandler.Delete(ctx, in, out)
}
